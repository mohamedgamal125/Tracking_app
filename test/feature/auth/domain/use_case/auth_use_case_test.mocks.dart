// Mocks generated by Mockito 5.4.6 from annotations
// in tracking_app/test/feature/auth/domain/use_case/auth_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:tracking_app/core/common/result.dart' as _i4;
import 'package:tracking_app/feature/auth/domain/entity/forget_response_password_entity.dart'
    as _i5;
import 'package:tracking_app/feature/auth/domain/entity/reset_password_response_entity.dart'
    as _i8;
import 'package:tracking_app/feature/auth/domain/entity/verify_email_response_entity.dart'
    as _i7;
import 'package:tracking_app/feature/auth/domain/repository/auth_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.ForgetResponsePasswordEntity>> forgetPassword(
          String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [email],
        ),
        returnValue:
            _i3.Future<_i4.Result<_i5.ForgetResponsePasswordEntity>>.value(
                _i6.dummyValue<_i4.Result<_i5.ForgetResponsePasswordEntity>>(
          this,
          Invocation.method(
            #forgetPassword,
            [email],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i5.ForgetResponsePasswordEntity>>);

  @override
  _i3.Future<_i4.Result<_i7.VerifyEmailResponseEntity>> verifyEmail(
          String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyEmail,
          [code],
        ),
        returnValue:
            _i3.Future<_i4.Result<_i7.VerifyEmailResponseEntity>>.value(
                _i6.dummyValue<_i4.Result<_i7.VerifyEmailResponseEntity>>(
          this,
          Invocation.method(
            #verifyEmail,
            [code],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i7.VerifyEmailResponseEntity>>);

  @override
  _i3.Future<_i4.Result<_i8.ResetPasswordResponseEntity>> resetPassword(
    String? email,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            email,
            newPassword,
          ],
        ),
        returnValue:
            _i3.Future<_i4.Result<_i8.ResetPasswordResponseEntity>>.value(
                _i6.dummyValue<_i4.Result<_i8.ResetPasswordResponseEntity>>(
          this,
          Invocation.method(
            #resetPassword,
            [
              email,
              newPassword,
            ],
          ),
        )),
      ) as _i3.Future<_i4.Result<_i8.ResetPasswordResponseEntity>>);

  @override
  _i3.Future<void> saveEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #saveEmail,
          [email],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> getSavedEmail() => (super.noSuchMethod(
        Invocation.method(
          #getSavedEmail,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
}
